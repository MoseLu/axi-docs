name: Build and Trigger Deploy Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up pnpm
      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      # Set up Node.js with pnpm cache
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      # Install dependencies using pnpm
      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile

      # Build VitePress project using pnpm
      - name: Build VitePress Project
        run: |
          pnpm run docs:build  # 使用 pnpm 执行 VitePress 构建命令

      # Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.event.repository.name }}
          path: docs/.vitepress/dist/
          retention-days: 1

      # Expose build artifacts and trigger deployment
      - name: Expose build artifacts and trigger deployment
        run: |
          echo "BUILD_ARTIFACTS=$(pwd)/dist" >> $GITHUB_ENV
          echo "PROJECT_TYPE=vitepress" >> $GITHUB_ENV
          echo "DEPLOY_PATH=/srv/static/${{ github.event.repository.name }}" >> $GITHUB_ENV

      # Trigger deployment workflow on Deployment Center
      - name: Trigger deployment workflow on Deployment Center
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.DEPLOY_CENTER_PAT }}
          repository: MoseLu/axi-deploy  # 使用正确的仓库名称
          event-type: deploy
          client-payload: |
            {
              "project": "${{ github.event.repository.name }}",
              "deploy_path": "/srv/static/${{ github.event.repository.name }}",
              "run_id": "${{ github.run_id }}",
              "source_repo": "${{ github.repository }}",
              "nginx_config": "location /docs/ { alias /srv/static/${{ github.event.repository.name }}/; index index.html; try_files $uri $uri/ /docs/index.html; add_header X-Robots-Tag \"noindex, nofollow\"; location ~* \\.html$ { add_header Content-Type \"text/html; charset=utf-8\"; } }",
              "nginx_path": "/www/server/nginx/conf/conf.d/redamancy/route-${{ github.event.repository.name }}.conf",
              "test_url": "https://redamancy.com.cn/docs/"
            }
