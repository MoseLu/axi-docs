name: Build & Deploy AXI Docs

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      run_id: ${{ github.run_id }}
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        
      - name: 设置 pnpm
        uses: pnpm/action-setup@v4
        
      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: 安装依赖
        run: pnpm install --frozen-lockfile
        
      - name: 构建项目
        run: pnpm run docs:build
        
      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        id: upload
        with:
          name: dist-${{ github.event.repository.name }}
          path: docs/.vitepress/dist/
          retention-days: 1

  trigger-deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 触发部署
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.DEPLOY_CENTER_PAT }}
          script: |
            const nginxConfig = `location /docs/ {
                alias /srv/static/axi-docs/;
                index index.html;
                try_files $uri $uri/ =404;
                
                # 确保不缓存HTML文件
                location ~* \\.html$ {
                    add_header Cache-Control "no-cache, no-store, must-revalidate";
                    add_header Pragma "no-cache";
                    add_header Expires "0";
                }
                
                # 静态资源缓存
                location ~* \\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                    expires 1y;
                    add_header Cache-Control "public, immutable";
                }
            }
            
            location = /docs {
                return 301 /docs/;
            }`;
            
            const { data: response } = await github.rest.actions.createWorkflowDispatch({
              owner: 'MoseLu',
              repo: 'axi-deploy',
              workflow_id: 'universal_deploy.yml',
              ref: 'master',
              inputs: {
                project: '${{ github.event.repository.name }}',
                source_repo: '${{ github.repository }}',
                run_id: '${{ needs.build.outputs.run_id }}',
                deploy_type: 'static',
                nginx_config: nginxConfig,
                test_url: 'https://redamancy.com.cn/docs/'
              }
            });
            console.log('部署已触发:', response);
