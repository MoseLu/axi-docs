name: Build & Deploy Axi Docs

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-id: ${{ steps.upload.outputs.artifact-id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm docs:build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        id: upload
        with:
          name: dist-axi-docs
          path: docs/.vitepress/dist/
          retention-days: 1

  trigger-deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check server config
        run: |
          echo "Checking server configuration..."
          echo "SERVER_HOST: ${{ secrets.SERVER_HOST }}"
          echo "SERVER_PORT: ${{ secrets.SERVER_PORT }}"
          echo "SERVER_USER: ${{ secrets.SERVER_USER }}"
          echo "SERVER_KEY length: ${{ secrets.SERVER_KEY != "" && "Set" || "Not set" }}"

          if [ -z "${{ secrets.SERVER_HOST }}" ]; then
            echo "ERROR: SERVER_HOST not set"
            exit 1
          fi

          if [ -z "${{ secrets.SERVER_PORT }}" ]; then
            echo "ERROR: SERVER_PORT not set"
            exit 1
          fi

          if [ -z "${{ secrets.SERVER_USER }}" ]; then
            echo "ERROR: SERVER_USER not set"
            exit 1
          fi

          if [ -z "${{ secrets.SERVER_KEY }}" ]; then
            echo "ERROR: SERVER_KEY not set"
            echo "Please set SERVER_KEY in axi-docs repository Settings > Secrets and variables > Actions"
            exit 1
          fi

          echo "Server configuration check completed"

      - name: Trigger deployment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.DEPLOY_CENTER_PAT }}
          script: |
            const runId = "${{ github.run_id }}";
            console.log("Current workflow run ID:", runId);
            
            try {
              console.log("Starting deployment trigger...");
              console.log("Target repository: MoseLu/axi-deploy");
              console.log("Workflow: external-deploy.yml");
              console.log("Branch: master");

              const serverConfig = `${{ secrets.SERVER_HOST }}/${{ secrets.SERVER_PORT }}/${{ secrets.SERVER_USER }}/${{ secrets.SERVER_KEY }}`;
              console.log("Server config length:", serverConfig.length);

              const { data: response } = await github.rest.actions.createWorkflowDispatch({
                owner: "MoseLu",
                repo: "axi-deploy",
                workflow_id: "external-deploy.yml",
                ref: "master",
                inputs: {
                  project: "axi-docs",
                  lang: "static",
                  artifact_id: "${{ needs.build.outputs.artifact-id }}",
                  deploy_path: "/www/wwwroot/axi-docs",
                  start_cmd: "echo \"Axi Docs static website deployment completed, no startup command needed\"",
                  caller_info: "${{ github.repository }}/${{ github.ref_name }}/${{ github.sha }}",
                  run_id: runId,
                  server_config: serverConfig
                }
              });

              console.log("Axi Docs deployment triggered successfully");
              console.log("Response status:", response ? "Success" : "No data returned (normal)");
            } catch (error) {
              console.error("Failed to trigger deployment:", error.message);
              throw error;
            }
