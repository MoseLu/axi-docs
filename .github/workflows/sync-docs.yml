name: Sync Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'uploads/md/**'
  workflow_dispatch:

jobs:
  sync-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 安装 pnpm
      uses: pnpm/action-setup@v4
        
    - name: 设置 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
        
    - name: 安装依赖
      run: pnpm install
        
    - name: 同步 MD 文件
      run: |
        # 同步 uploads/md 到 docs/content
        rsync -av --delete --include=*.md --exclude=* uploads/md/ docs/content/
        
    - name: 构建文档
      run: pnpm docs:build
        
    - name: 提交更改
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docs/content/
        git commit -m "docs: 同步文档更新" || echo "No changes to commit"
        git push
        
    - name: 上传构建产物到Release
      id: upload
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # 创建临时release来上传构建产物
        RELEASE_TAG="build-$(date +%s)"
        echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT
        
        # 创建release
        gh release create $RELEASE_TAG --title "Build $RELEASE_TAG" --notes "Build for deployment" --draft
        
        # 压缩构建产物
        cd docs/.vitepress/dist
        zip -r ../../../artifact.zip .
        cd ../../../
        
        # 上传到release
        gh release upload $RELEASE_TAG artifact.zip
        
        # 获取下载URL
        DOWNLOAD_URL=$(gh release view $RELEASE_TAG --json assets --jq '.assets[0].url')
        echo "artifact_url=$DOWNLOAD_URL" >> $GITHUB_OUTPUT
        
        echo "构建产物已上传到: $DOWNLOAD_URL"
        
    - name: 触发部署
      uses: actions/github-script@v7
      with:
        script: |
          const { data: response } = await github.rest.actions.createWorkflowDispatch({
            owner: 'MoseLu',
            repo: 'axi-deploy',
            workflow_id: 'deploy.yml',
            ref: 'master',
            inputs: {
              project: 'axi-docs',
              lang: 'node',
              artifact_id: '${{ steps.upload.outputs.release_tag }}',
              deploy_path: '/www/wwwroot/axi-docs',
              start_cmd: 'cd /www/wwwroot/axi-docs && chmod -R 755 . && sudo systemctl reload nginx',
              caller_repo: '${{ github.repository }}',
              caller_branch: '${{ github.ref_name }}',
              caller_commit: '${{ github.sha }}',
              artifact_url: '${{ steps.upload.outputs.artifact_url }}'
            }
          });
          console.log('部署已触发:', response); 