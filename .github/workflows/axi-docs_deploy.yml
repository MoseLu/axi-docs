name: Build & Deploy AXI Docs

on:
  push:
    branches: [main, master]
    paths-ignore:
      - 'uploads/md/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      run_id: ${{ github.run_id }}
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        
      - name: 设置 pnpm
        uses: pnpm/action-setup@v4
        
      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: 安装依赖
        run: pnpm install --frozen-lockfile
        
      - name: 构建项目
        run: pnpm run docs:build
        
      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        id: upload
        with:
          name: dist-${{ github.event.repository.name }}
          path: docs/.vitepress/dist/
          retention-days: 1

  trigger-deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 触发部署
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.DEPLOY_CENTER_PAT }}
          script: 'try { console.log("🚀 开始触发部署..."); const nginxConfig = "location /docs/ {\\n    alias /srv/static/axi-docs/;\\n    index index.html;\\n    try_files $uri $uri/ /docs/index.html;\\n    \\n    # 确保不缓存HTML文件\\n    add_header Cache-Control \\"no-cache, no-store, must-revalidate\\" always;\\n    add_header Pragma \\"no-cache\\" always;\\n    add_header Expires \\"0\\" always;\\n}\\n\\n# 处理 /docs 路径（不带斜杠）- 重定向到 /docs/\\nlocation = /docs {\\n    return 301 /docs/;\\n}"; const encoded = Buffer.from(nginxConfig).toString("base64"); const { data: response } = await github.rest.actions.createWorkflowDispatch({ owner: "MoseLu", repo: "axi-deploy", workflow_id: "main-deployment.yml", ref: "master", inputs: { project: "${{ github.event.repository.name }}", source_repo: "${{ github.repository }}", run_id: "${{ needs.build.outputs.run_id }}", deploy_type: "static", nginx_config_b64: encoded, server_host: "${{ secrets.SERVER_HOST }}", server_user: "${{ secrets.SERVER_USER }}", server_key: "${{ secrets.SERVER_KEY }}", server_port: "${{ secrets.SERVER_PORT }}" } }); console.log("✅ 部署已成功触发!"); } catch (error) { console.error("❌ 触发部署失败:", error.message); throw error; }'
